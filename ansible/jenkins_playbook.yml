---

- name: Jenkins Playbook
  gather_facts: false
  hosts: all
  become: yes
  vars:
    env_variables:
      AZ_REPO: "bionic"
  tasks:
    - name: "Add the Azure CLI software repository"
      environment: "{{ env_variables }}"
      shell:
        cmd: "echo 'deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main' | sudo tee /etc/apt/sources.list.d/azure-cli.list"
    
    - name: "apt-key"
      shell:
        cmd: "wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -"

    - name: "append repo"
      shell:
        cmd: "sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'"

    - name: "add ansible repo"
      environment: "{{ env_variables }}"
      apt_repository:
        repo: 'ppa:ansible/ansible'

    - name: "Download and install the Microsoft signing key"
      shell:
        cmd: "curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/microsoft.gpg > /dev/null"

    - name: "apt-get update"
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: "install java"
      apt:
        name: ['default-jre']
        state: latest

    - name: "install jenkins"
      apt:
        name: ['jenkins']
        state: latest

    - name: "start jenkins"
      systemd:
        state: started
        name: jenkins

    - name: "install ansible"
      apt:
        name: ['software-properties-common', 'ansible']

    - name: "install azure-cli pre-req"
      apt:
        name: ['ca-certificates', 'curl', 'apt-transport-https', 'lsb-release', 'gnupg']
        state: latest


    - name: "Install the azure-cli package"
      apt:
        name: ['azure-cli']
        state: latest

    - name: "Check ssh-key"
      stat:
        path: "/var/lib/jenkins/.ssh/id_rsa"
      register: ssh_exist

    - name: "create and upload public key"
      shell: |
        ssh-keygen -q -t rsa -N '' -f /var/lib/jenkins/.ssh/id_rsa
        chown jenkins:jenkins /var/lib/jenkins/.ssh/id_rsa
        chown jenkins:jenkins /var/lib/jenkins/.ssh/id_rsa.pub
        az login --identity
        az storage container create --account-name ikstorageexample --name public-key --auth-mode login
        az storage blob upload --auth-mode login -c public-key -f /var/lib/jenkins/.ssh/id_rsa.pub -n id_rsa.pub --account-name ikstorageexample
        az logout
      when: not ssh_exist.stat.exists
